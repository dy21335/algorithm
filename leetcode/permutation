// Given a collection of distinct integers, return all possible permutations.
//
//     Example:
//
// Input: [1,2,3]
// Output:
//     [
//         [1,2,3],
//         [1,3,2],
//         [2,1,3],
//         [2,3,1],
//         [3,1,2],
//         [3,2,1]
//     ]

var result,
    temp;

    result = [];
    temp = [];

var permute = function(nums) {
    permutation(nums, nums.length);
    return result;
};



function permutation(arr, len) {
    if(len == 1){
        temp.push(arr[0]);
        result.push(temp.slice());
        // console.log(result);
        temp.pop();
    }
    for(let i = 0; i < len; ++i){
        temp.push(arr[i]);
        permutation((arr.slice(0,i)?arr.slice(0,i):[]).concat(arr.slice(i+1)), len-1);
        temp.pop();
    }
}

console.log(permute([1]));
